const VkBot = require('node-vk-bot-api'); // –æ—Å–Ω–æ–≤–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å vk api
const VK = require('vk-node-sdk'); // –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥—Ä—É–≥–∏–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ vk api
const Markup = require('node-vk-bot-api/lib/markup'); // –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Å–±–æ—Ä–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
const Scene = require('node-vk-bot-api/lib/scene'); // –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ü–µ–Ω (–∫–æ–º–Ω–∞—Ç)
const Session = require('node-vk-bot-api/lib/session');
const Stage = require('node-vk-bot-api/lib/stage');
const FormulaParser = require('hot-formula-parser').Parser; // –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —Å —Ñ–æ—Ä–º—É–ª–∞–º–∏
const TOKEN = "4b09211c76413d22f462f412388362ab35c727a3c94ed6192b9da2a8fded3063065a693c65bcf3e2c85fe"; // —Ç–æ–∫–∫–µ–Ω –≥—Ä—É–ø–ø—ã

// –æ—Å–Ω–æ–≤–∞–Ω—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
const main_keyboard = [
    [
    	Markup.button('üêæ –ü—Ä–∏–≤–µ—Ç üêæ', 'primary'),
    	Markup.button('üôä –§–æ—Ç–æ üôä', 'primary'),
    ],
    [
      	Markup.button('üß† –ü—Ä–æ—Å—Ç–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä üß†', 'primary'),
    ],
    [
      	Markup.button('üí™ –°—É–ø–µ—Ä –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä üí™', 'primary'),
    ],
];

// –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–Ω–∞–∑–∞–¥"
const back_keyboard = [
    [
      	Markup.button('‚¨Ö –ù–∞–∑–∞–¥ ‚¨Ö', 'primary'),
    ]
];

const bot = new VkBot(TOKEN); // —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥—Ä—É–ø–ø–æ–π
const Group = new VK.Group(TOKEN); // —Å–æ–∑–¥–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥—Ä—É–ø–ø–æ–π

const parser = new FormulaParser(); // —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–æ—Ä–º—É–ª–∞–º–∏


// —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ü–µ–Ω—ã (–∫–æ–º–Ω–∞—Ç—ã) "–ø—Ä–æ—Å—Ç–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä"
const scene_sumple_calc =  new Scene('sumple_calc', 
  (ctx)  =>  {
    ctx.scene.next(); // –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–µ—Ä–≤—ã–π —à–∞–≥
    ctx.reply('–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ.\n–ù–∞–ø—Ä–∏–º–µ—Ä: 2 + 2\n‚Äº–ü—Ä–æ–±–µ–ª—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã‚Äº\n(–î–æ—Å—Ç—É–ø–Ω–æ "+", "-", "*", "/")',
    	null, Markup.keyboard(back_keyboard)); // –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–Ω–æ–ø–∫—É "–Ω–∞–∑–∞–¥"
  },
  (ctx)  =>  {
    console_log(ctx.message); // –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Å–æ–ª—å
    if(ctx.message.text == "‚¨Ö –ù–∞–∑–∞–¥ ‚¨Ö") // –µ—Å–ª–∏ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–Ω–∞–∑–∞–¥"
  	{
  		ctx.scene.leave(); // –≤—ã—Ö–æ–¥–∏–º —Å —Å—Ü–µ–Ω—ã (–∫–æ–º–Ω–∞—Ç—ã)
  		ctx.reply("‚¨á –í–æ—Ç —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö –∫–æ–º–º–∞–Ω–¥: ‚¨á", null, Markup.keyboard(main_keyboard)); // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
  	}
  	else
  	{
  		let calc = new Calculator(); // –∏–Ω–∞—á–µ –ø–æ–¥–∫–ª—é—á–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
        let result = calc.calculate(ctx.message.text); // –ø–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ—Å—Ç—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π
  		ctx.reply(result, null, Markup.keyboard(back_keyboard)); // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–¥—å—Ç–∞—Ç –∏ –∫–Ω–æ–ø–∫—É "–Ω–∞–∑–∞–¥"
    	ctx.scene.stage = 0; // –æ–±–Ω—É–ª—è–µ–º —à–∞–≥ —Å—Ü–µ–Ω—ã –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–∏–º–µ—Ä–∞
  	}
  },
);

// —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ü–µ–Ω—ã (–∫–æ–º–Ω–∞—Ç—ã) "—Å—É–ø–µ—Ä –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä"
const scene_super_calc =  new Scene('super_calc', 
  (ctx)  =>  {
    ctx.scene.next(); // –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–µ—Ä–≤—ã–π —à–∞–≥
    ctx.reply('–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ.\n–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\nüìå–û–ø–µ—Ä–∞—Ç—Ä—ã: "+", "-", "*", "/", "^"\nüìå–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã: Pi(), E()\nüìå–§—É–Ω–∫—Ü–∏–∏: Sqrt(), Abs(), Sin(), Cos(), Tan(), Log(), Min(), Max(), Ceiling()\n\n–ù–∞–ø—Ä–∏–º–µ—Ä:\nSqrt(Pi() ^ 5) + Cos(25) / 2 = 17.9890...',
     null, Markup.keyboard(back_keyboard)); // –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–Ω–æ–ø–∫—É "–Ω–∞–∑–∞–¥"
  },
  (ctx)  =>  {
    console_log(ctx.message); // –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Å–æ–ª—å
    if(ctx.message.text == "‚¨Ö –ù–∞–∑–∞–¥ ‚¨Ö") // –µ—Å–ª–∏ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–Ω–∞–∑–∞–¥"
  	{
  		ctx.scene.leave(); // –≤—ã—Ö–æ–¥–∏–º —Å —Å—Ü–µ–Ω—ã (–∫–æ–º–Ω–∞—Ç—ã)
  		ctx.reply("‚¨á –í–æ—Ç —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö –∫–æ–º–º–∞–Ω–¥: ‚¨á", null, Markup.keyboard(main_keyboard)); // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
  	}
  	else
  	{
  		let calc_result = parser.parse(ctx.message.text); // –ø–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        let result; // —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ –∫–æ—Ç–æ—Ä—É—é –ø–æ–∑–∂–µ –∑–∞–ø–∏—à–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç

  		if(calc_result.result == null) // –µ—Å–ª–∏ —Ä–µ–∑—É–ª—å–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—É—Å—Ç–æ–π
  		{
  			// result = calc_result.error;
  			result = "ü§° –û–ø–∞! –û—à–∏–±–æ—á–∫–∞... ü§°"; // –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
  		}
  		else result = calc_result.result; // –∏–Ω–∞—á–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç

  		ctx.reply(String(result), null, Markup.keyboard(back_keyboard)); // –≤—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –∫–Ω–æ–ø–∫—É "–Ω–∞–∑–∞–¥"
    	ctx.scene.stage = 0; // –æ–±–Ω—É–ª—è–µ–º —à–∞–≥ —Å—Ü–µ–Ω—ã –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤–≤–æ–¥–∞ —Ñ—É–Ω–∫—Ü–∏–π
  	}
  },
);

const session =  new Session(); // —Å–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
const stage =  new Stage(scene_sumple_calc, scene_super_calc); // —Å–æ–∑–¥–∞–µ–º —ç—Ç–∞–ø –∏–∑ —Å–ø–∏–∫–∞ —Å—Ü–µ–Ω (–∫–æ–º–Ω–∞—Ç)

bot.use(session.middleware()); // "–≤–∫–ª—é—á–∞–µ–º" —Å–µ—Å—Å–∏—é
bot.use(stage.middleware()); // –≤–∫–ª—é—á–∞–µ–º —Å—Ü–µ–Ω—ã (–∫–æ–º–Ω–∞—Ç—ã)

// –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏ –∑–∞—Ö–æ–¥–∏–º –≤ —Å—Ü–µ–Ω—É (–∫–æ–º–Ω—Ç—É) "–ø—Ä–æ—Å—Ç–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä"
bot.command('üß† –ü—Ä–æ—Å—Ç–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä üß†',  (ctx)  =>  {
    console_log(ctx.message); // –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Å–æ–ª—å
    ctx.scene.enter('sumple_calc');
});

// –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏ –∑–∞—Ö–æ–¥–∏–º –≤ —Å—Ü–µ–Ω—É (–∫–æ–º–Ω—Ç—É) "—Å—É–ø–µ—Ä –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä"
bot.command('üí™ –°—É–ø–µ—Ä –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä üí™',  (ctx)  =>  {
    console_log(ctx.message); // –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Å–æ–ª—å
    ctx.scene.enter('super_calc');
}) 

// –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.startPolling(() => {
    console.log('[BOT] –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!'); // —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å –æ–± —É–¥–∞—á–Ω–æ–º –∑–∞–ø—É—Å–∫–µ
});

// –ø–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
bot.on((ctx) => {
	let message = ctx.message; // —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let user_id = ctx.message.peer_id; // id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

	console_log(message); // –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Å–æ–ª—å

    if(message.text == 'üêæ –ü—Ä–∏–≤–µ—Ç üêæ' || message.text == '–ù–∞—á–∞—Ç—å') // –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ "–ø—Ä–∏–≤–µ—Ç" –∏–ª–∏ "–Ω–∞—á–∞—Ç—å"
    {
        ctx.reply('–ü—Ä–∏–≤–µ—Ç! üëã\n‚¨á –í–æ—Ç —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö –∫–æ–º–º–∞–Ω–¥: ‚¨á', null, Markup.keyboard(main_keyboard)); // –≤—ã–≤–æ–¥ –ø—Ä–∏–≤–µ—Ç—Å–≤–∏—è
    }
    else if(message.text == 'üôä –§–æ—Ç–æ üôä') // –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ "—Ñ–æ—Ç–æ"
    {
        // –æ—Ç–ø—Ä–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ª–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª—å
        Group.sendMessage({user_id: user_id, message: '–≠—ç—ç...', attachment: 'photo-195403321_457239017', keyboard: Markup.keyboard(main_keyboard)},
          (messageId, error) => {
              if (messageId) {
               console.log('–°–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!\n message_id: ', messageId)
              } else {
               console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ... ', error)
              }
          }
        );
    }
	else
    {
        // –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –µ—Å–ª–∏ –Ω–µ—Ç –∫–æ–º–º–∞–Ω–¥—ã
        ctx.reply("ü§∑‚Äç –Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã... ü§∑‚Äç\n‚¨á –í–æ—Ç —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö –∫–æ–º–º–∞–Ω–¥: ‚¨á", null, Markup.keyboard(main_keyboard));
    }
});

// —Ñ—É–Ω–∫—Ü–∏—è "–ø—Ä–æ—Å—Ç–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä"
function Calculator()
{
	this.methods = {
		"+" : (a, b) => a + b,
		"-" : (a, b) => a - b,
		"*" : (a, b) => a * b,
		"/" : (a, b) => a / b
	};

	this.calculate = function(str) {
		let split = str.split(' '),
			a = +split[0],
			op = split[1],
			b = +split[2];

		console.log("\na = " + a + " op = " + op + " b = " + b);

		if(!this.methods[op] || isNaN(a) || isNaN(b)) {
			return "ü§° –û–ø–∞! –û—à–∏–±–æ—á–∫–∞... ü§°";
		}

		console.log("–û—Ç–≤–µ—Ç = " + this.methods[op](a, b));

		return String(this.methods[op](a, b));
	}
}

// —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Å–æ–ª—å
function console_log(message)
{
    console.log('\n----------');
    for (var prop in message) {
        console.log("obj." + prop + " = " + message[prop]);
    }
    console.log('----------');
}